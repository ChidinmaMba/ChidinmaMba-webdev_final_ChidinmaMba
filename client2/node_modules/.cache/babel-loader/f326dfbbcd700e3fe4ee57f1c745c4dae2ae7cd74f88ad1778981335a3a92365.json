{"ast":null,"code":"var _jsxFileName = \"/Users/cmba/Projects/web_dev/bonbon/client/src/components/PlanDay.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport EventCard from \"./EventCard.jsx\";\nimport eventTags from \"../eventTags.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlanDay() {\n  _s();\n  const [selected, setSelected] = useState([]);\n  const [fetchedEvents, setFetchedEvents] = useState([]);\n  const getEvents = () => {\n    var params = selected.join(\" \");\n    var url = `/getEvents?eventtags=${params}`;\n    fetch('/getEvents').then(response => response.json()).then(data => setFetchedEvents(data.events));\n  };\n  const ammendSelected = tagName => {\n    if (selected.includes(tagName)) {\n      const index = selected.indexOf(tagName);\n      var copiedSelected = [...selected];\n      copiedSelected.splice(index, 1);\n      setSelected(copiedSelected);\n    } else {\n      setSelected([...selected, tagName]);\n    }\n    console.log([...selected]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingLeft: \"28px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"What are the vibes for today???\\uD83D\\uDE0B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), eventTags.map(tag => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tagChecker\",\n        onClick: () => ammendSelected(tag.tagName),\n        style: {\n          backgroundColor: selected.includes(tag.tagName) ? 'rgba(213,213,213,0.5)' : 'white'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [tag.tagName, \" \", tag.icon]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tagSubmission\",\n      onClick: getEvents,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 64\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), fetchedEvents.map(event => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          float: \"left\"\n        },\n        children: /*#__PURE__*/_jsxDEV(EventCard, {\n          eventInfo: event\n        }, event.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(PlanDay, \"soWwACxddgguzTXj1ARc6yqGaTw=\");\n_c = PlanDay;\nexport default PlanDay;\nvar _c;\n$RefreshReg$(_c, \"PlanDay\");","map":{"version":3,"names":["React","useState","EventCard","eventTags","jsxDEV","_jsxDEV","PlanDay","_s","selected","setSelected","fetchedEvents","setFetchedEvents","getEvents","params","join","url","fetch","then","response","json","data","events","ammendSelected","tagName","includes","index","indexOf","copiedSelected","splice","console","log","style","paddingLeft","children","fileName","_jsxFileName","lineNumber","columnNumber","map","tag","className","onClick","backgroundColor","icon","event","float","eventInfo","key","_c","$RefreshReg$"],"sources":["/Users/cmba/Projects/web_dev/bonbon/client/src/components/PlanDay.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport EventCard from \"./EventCard.jsx\"\nimport eventTags from \"../eventTags.js\"\n\nfunction PlanDay() {\n    const [selected, setSelected] = useState([]);\n    const [fetchedEvents, setFetchedEvents] = useState([]);\n\n    const getEvents =()=> {\n        var params = selected.join(\" \");\n        var url = `/getEvents?eventtags=${params}`\n        fetch('/getEvents').then(\n            response => response.json()\n        )\n        .then(data => setFetchedEvents(data.events))\n    }\n\n    const ammendSelected = (tagName) => {\n        if (selected.includes(tagName)) {\n            const index = selected.indexOf(tagName);\n            var copiedSelected = [...selected];\n            copiedSelected.splice(index, 1);\n            setSelected(copiedSelected);\n        }\n        else {\n            setSelected([...selected, tagName])\n        }\n\n        console.log([...selected]);\n    }\n    return (\n        <div style={{paddingLeft: \"28px\"}}>\n            <h2>What are the vibes for today???ðŸ˜‹</h2>\n            {eventTags.map((tag) => {\n                return (\n                    <span className=\"tagChecker\" onClick={() => ammendSelected(tag.tagName)} style={{backgroundColor: selected.includes(tag.tagName) ? 'rgba(213,213,213,0.5)' : 'white'}}>\n                        <p>{tag.tagName} {tag.icon}</p>\n                    </span>\n                )\n            })}\n              \n            <div className=\"tagSubmission\" onClick={getEvents}><p>SUBMIT</p></div>\n\n            {fetchedEvents.map((event)=> {\n                return (\n                    <div style={{float:\"left\"}}>\n                    <EventCard\n                        key={event.key}\n                        eventInfo={event}\n                    />\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default PlanDay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}