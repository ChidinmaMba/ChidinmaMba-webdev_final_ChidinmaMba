{"ast":null,"code":"var _jsxFileName = \"/Users/cmba/Projects/web_dev/bonbon/client/src/components/PlanDay.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport eventTags from \"../eventTags.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlanDay() {\n  _s();\n  const [selected, setSelected] = useState([]);\n  const getEvents = () => {};\n  const ammendSelected = tagName => {\n    if (selected.includes(tagName)) {\n      const index = selected.indexOf(tagName);\n      var copiedSelected = [...selected];\n      copiedSelected.splice(index, 1);\n      setSelected(copiedSelected);\n    } else {\n      setSelected([...selected, tagName]);\n    }\n    console.log([...selected]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingLeft: \"28px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"What are the vibes for today???\\uD83D\\uDE0B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), eventTags.map(tag => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tagChecker\",\n        onClick: () => ammendSelected(tag.tagName),\n        style: {\n          backgroundColor: selected.includes(tag.tagName) ? 'rgba(213,213,213,0.5)' : 'white'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [tag.tagName, \" \", tag.icon]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submitTags\",\n      onClick: getEvents,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"SUMBIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(PlanDay, \"lGSfRvmoWXlCcuuisg7PtZk/Isc=\");\n_c = PlanDay;\nexport default PlanDay;\nvar _c;\n$RefreshReg$(_c, \"PlanDay\");","map":{"version":3,"names":["React","useState","eventTags","jsxDEV","_jsxDEV","PlanDay","_s","selected","setSelected","getEvents","ammendSelected","tagName","includes","index","indexOf","copiedSelected","splice","console","log","style","paddingLeft","children","fileName","_jsxFileName","lineNumber","columnNumber","map","tag","className","onClick","backgroundColor","icon","_c","$RefreshReg$"],"sources":["/Users/cmba/Projects/web_dev/bonbon/client/src/components/PlanDay.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport eventTags from \"../eventTags.js\"\n\nfunction PlanDay() {\n    const [selected, setSelected] = useState([]);\n    const getEvents =()=> {\n\n    }\n    const ammendSelected = (tagName) => {\n        if (selected.includes(tagName)) {\n            const index = selected.indexOf(tagName);\n            var copiedSelected = [...selected];\n            copiedSelected.splice(index, 1);\n            setSelected(copiedSelected);\n        }\n        else {\n            setSelected([...selected, tagName])\n        }\n\n        console.log([...selected]);\n    }\n    return (\n        <div style={{paddingLeft: \"28px\"}}>\n            <h2>What are the vibes for today???ðŸ˜‹</h2>\n            {eventTags.map((tag) => {\n                return (\n                    <div className=\"tagChecker\" onClick={() => ammendSelected(tag.tagName)} style={{backgroundColor: selected.includes(tag.tagName) ? 'rgba(213,213,213,0.5)' : 'white'}}>\n                        <p>{tag.tagName} {tag.icon}</p>\n                    </div>\n                )\n            })}\n              \n            <div className=\"submitTags\" onClick={getEvents}>\n                <p>SUMBIT</p>\n            </div> \n        </div>\n    )\n}\n\nexport default PlanDay;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,SAAS,MAAM,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMQ,SAAS,GAAEA,CAAA,KAAK,CAEtB,CAAC;EACD,MAAMC,cAAc,GAAIC,OAAO,IAAK;IAChC,IAAIJ,QAAQ,CAACK,QAAQ,CAACD,OAAO,CAAC,EAAE;MAC5B,MAAME,KAAK,GAAGN,QAAQ,CAACO,OAAO,CAACH,OAAO,CAAC;MACvC,IAAII,cAAc,GAAG,CAAC,GAAGR,QAAQ,CAAC;MAClCQ,cAAc,CAACC,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;MAC/BL,WAAW,CAACO,cAAc,CAAC;IAC/B,CAAC,MACI;MACDP,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEI,OAAO,CAAC,CAAC;IACvC;IAEAM,OAAO,CAACC,GAAG,CAAC,CAAC,GAAGX,QAAQ,CAAC,CAAC;EAC9B,CAAC;EACD,oBACIH,OAAA;IAAKe,KAAK,EAAE;MAACC,WAAW,EAAE;IAAM,CAAE;IAAAC,QAAA,gBAC9BjB,OAAA;MAAAiB,QAAA,EAAI;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzCvB,SAAS,CAACwB,GAAG,CAAEC,GAAG,IAAK;MACpB,oBACIvB,OAAA;QAAKwB,SAAS,EAAC,YAAY;QAACC,OAAO,EAAEA,CAAA,KAAMnB,cAAc,CAACiB,GAAG,CAAChB,OAAO,CAAE;QAACQ,KAAK,EAAE;UAACW,eAAe,EAAEvB,QAAQ,CAACK,QAAQ,CAACe,GAAG,CAAChB,OAAO,CAAC,GAAG,uBAAuB,GAAG;QAAO,CAAE;QAAAU,QAAA,eACjKjB,OAAA;UAAAiB,QAAA,GAAIM,GAAG,CAAChB,OAAO,EAAC,GAAC,EAACgB,GAAG,CAACI,IAAI;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC;IAEd,CAAC,CAAC,eAEFrB,OAAA;MAAKwB,SAAS,EAAC,YAAY;MAACC,OAAO,EAAEpB,SAAU;MAAAY,QAAA,eAC3CjB,OAAA;QAAAiB,QAAA,EAAG;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACnB,EAAA,CAlCQD,OAAO;AAAA2B,EAAA,GAAP3B,OAAO;AAoChB,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}